import os
import tempfile
import streamlit as st
from agent import Agent

def process_media(file_path):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ Whisper –∏ —Ç.–¥.)"""
    return f"–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –∏–∑ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞: {os.path.basename(file_path)} (–∑–∞–≥–ª—É—à–∫–∞)"

def get_ai_response(user_message, chat_history):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å ChatGPT –∏ —Ç.–¥.)"""
    return f"AI: –≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ '{user_message}'. –ò—Å—Ç–æ—Ä–∏—è: {len(chat_history)} —Å–æ–æ–±—â–µ–Ω–∏–π"

agent = Agent()

if "messages" not in st.session_state:
    st.session_state.messages = []
if 'text_analys' not in st.session_state:
    st.session_state.text_analys = False
if "chat_started" not in st.session_state:
    st.session_state.chat_started = False
if "agent_state" not in st.session_state:
    st.session_state.agent_state = {
        'messages':[],
        'is_dialog_valid':False,
        'accounts': {},
        'summarize':''
        
    }

st.title("üé§ –ß–∞—Ç —Å AI (–º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π)")
st.caption("–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∑–∞—Ç–µ–º –Ω–∞—á–Ω—ë—Ç—Å—è –¥–∏–∞–ª–æ–≥")

if not st.session_state.chat_started:
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("–¢–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥")
        text_input = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—é –≤—Å—Ç—Ä–µ—á–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", height=150)
        if st.button("–ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑ (—Ç–µ–∫—Å—Ç)", disabled=not text_input.strip()):
            st.session_state.messages.append({"role": "user", "content": text_input})
            st.session_state.text_analys = True
            st.session_state.chat_started = True
            st.rerun()
    
    with col2:
        st.subheader("–ú–µ–¥–∏–∞-–≤–≤–æ–¥")
        media_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ/–≤–∏–¥–µ–æ –≤—Å—Ç—Ä–µ—á–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", 
                                    type=["mp3", "wav", "mp4", "mov"])
        if media_file and st.button("–ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑ (–º–µ–¥–∏–∞)"):
            with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
                tmp_file.write(media_file.read())
                media_text = process_media(tmp_file.name)
            
            st.session_state.messages.append({
                "role": "user", 
                "content": f"–ú–µ–¥–∏–∞—Ñ–∞–π–ª: {media_file.name}\n{media_text}"
            })
            st.session_state.chat_started = True
            st.rerun()

else:
    with st.chat_message("assistant"):
        st.markdown('–ê–Ω–∞–ª–∏–∑ –≤—Å—Ç—Ä–µ—á–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    
    agent_out = agent.start(st.session_state.messages[0]['content'])
    
    with st.chat_message('assistant'):
        st.markdown(agent_out)
    
    if user_input := st.chat_input("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."):
        st.session_state.messages.append({"role": "user", "content": user_input})
        
        with st.chat_message("user"):
            st.markdown(user_input)
        
        #st.session_state.messages.append({"role": "assistant", "content": response})
    
    if st.button("–ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥"):
        st.session_state.messages = []
        st.session_state.chat_started = False
        st.rerun()